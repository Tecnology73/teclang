#pragma once

#include <string>
#include "defs.h"

struct Debug {
    static std::string PrintToken(const Token &token) {
        switch (token) {
            case tok_eof:
                return "[EOF]";
            case tok_func:
                return "func";
            case tok_return:
                return "return";
            case tok_if:
                return "if";
            case tok_else:
                return "else";
            case tok_for:
                return "for";
            case tok_in:
                return "in";
            case tok_extern:
                return "extern";
            case tok_type:
                return "type";
            case tok_delete:
                return "delete";
            case tok_defer:
                return "defer";
            case tok_int:
                return "int";
            case tok_double:
                return "double";
            case tok_string:
                return "string";
            case tok_bool:
                return "bool";
            case tok_char:
                return "char";
            case tok_void:
                return "void";
            case tok_identifier:
                return "[IDEN]";
            case tok_int_literal:
                return "[INT]";
            case tok_double_literal:
                return "[DOUBLE]";
            case tok_string_literal:
                return "[STRING]";
            case tok_bool_literal:
                return "[BOOL]";
            case tok_plus:
                return "+";
            case tok_minus:
                return "-";
            case tok_multiply:
                return "*";
            case tok_divide:
                return "/";
            case tok_open_paren:
                return "(";
            case tok_close_paren:
                return ")";
            case tok_open_bracket:
                return "[";
            case tok_close_bracket:
                return "]";
            case tok_open_brace:
                return "{";
            case tok_close_brace:
                return "}";
            case tok_semicolon:
                return ";";
            case tok_colon:
                return ":";
            case tok_question_mark:
                return "?";
            case tok_ampersand:
                return "&";
            case tok_percent:
                return "%";
            case tok_pipe:
                return "|";
            case tok_caret:
                return "^";
            case tok_assign:
                return "=";
            case tok_exclamation:
                return "!";
            case tok_period:
                return ".";
            case tok_comma:
                return ",";
            case tok_less_than:
                return "<";
            case tok_greater_than:
                return ">";
            case tok_lt_equal:
                return "<=";
            case tok_gt_equal:
                return ">=";
            case tok_plus_equal:
                return "+=";
            case tok_minus_equal:
                return "-=";
            case tok_multi_equal:
                return "*=";
            case tok_divide_equal:
                return "/=";
            case tok_mod_equal:
                return "%=";
            case tok_and_equal:
                return "&=";
            case tok_or_equal:
                return "|=";
            case tok_xor_equal:
                return "^=";
            case tok_and:
                return "&&";
            case tok_or:
                return "||";
            case tok_plusplus:
                return "++";
            case tok_minusminus:
                return "--";
            case tok_not_equal:
                return "!=";
            case tok_equal:
                return "==";
            case tok_spread:
                return "..";
            case tok_arrow:
                return "=>";
            case tok_break:
                return "break";
            case tok_continue:
                return "continue";
            case tok_match:
                return "match";
        }

        return "[UNKNOWN]";
    }
};